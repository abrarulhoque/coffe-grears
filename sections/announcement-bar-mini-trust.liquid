{{ 'section-announcement-bar-mini-trust.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign current_locale = request.locale.iso_code
  assign is_rtl = false
  if current_locale == 'ar'
    assign is_rtl = true
  endif
-%}

<div 
  class="announcement-bar-mini-trust color-{{ section.settings.color_scheme }} gradient{% if is_rtl %} announcement-bar-mini-trust--rtl{% endif %}"
  data-announcement-bar
  style="--animation-delay: {{ section.settings.animation_delay }}ms;"
>
  <div class="page-width announcement-bar-mini-trust__container">
    <div class="announcement-bar-mini-trust__content" data-announcement-content>
      
      <!-- Full content for desktop -->
      <div class="announcement-bar-mini-trust__full">
        {%- for block in section.blocks -%}
          {%- if block.settings.show_item -%}
            <div class="announcement-bar-mini-trust__item" data-trust-item="{{ block.id }}" {{ block.shopify_attributes }}>
              <div class="announcement-bar-mini-trust__icon" data-icon="{{ block.id }}">
                {%- case block.settings.icon -%}
                  {%- when 'truck' -%}
                    {{ 'icon-truck.svg' | inline_asset_content }}
                  {%- when 'checkmark' -%}
                    {{ 'icon-checkmark.svg' | inline_asset_content }}
                  {%- when 'chat' -%}
                    {{ 'icon-chat-bubble.svg' | inline_asset_content }}
                  {%- when 'shield' -%}
                    {{ 'icon-shield.svg' | inline_asset_content }}
                  {%- when 'heart' -%}
                    {{ 'icon-heart.svg' | inline_asset_content }}
                  {%- when 'star' -%}
                    {{ 'icon-star.svg' | inline_asset_content }}
                  {%- when 'phone' -%}
                    {{ 'icon-phone.svg' | inline_asset_content }}
                  {%- when 'email' -%}
                    {{ 'icon-email.svg' | inline_asset_content }}
                  {%- else -%}
                    {{ 'icon-checkmark.svg' | inline_asset_content }}
                {%- endcase -%}
              </div>
              <span class="announcement-bar-mini-trust__text">
                {% if is_rtl and block.settings.text_ar != blank %}
                  {{ block.settings.text_ar }}
                {% elsif block.settings.text_en != blank %}
                  {{ block.settings.text_en }}
                {% endif %}
              </span>
            </div>
            {%- unless forloop.last -%}
              <div class="announcement-bar-mini-trust__divider"></div>
            {%- endunless -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
      
      <!-- Compressed content for mobile/scrolled state -->
      <div class="announcement-bar-mini-trust__compressed">
        <div class="announcement-bar-mini-trust__pill-container" data-pills-container>
          {%- for block in section.blocks -%}
            {%- if block.settings.show_item -%}
              <div class="announcement-bar-mini-trust__pill" data-pill="{{ block.id }}">
                <div class="announcement-bar-mini-trust__icon">
                  {%- case block.settings.icon -%}
                    {%- when 'truck' -%}
                      {{ 'icon-truck.svg' | inline_asset_content }}
                    {%- when 'checkmark' -%}
                      {{ 'icon-checkmark.svg' | inline_asset_content }}
                    {%- when 'chat' -%}
                      {{ 'icon-chat-bubble.svg' | inline_asset_content }}
                    {%- when 'shield' -%}
                      {{ 'icon-shield.svg' | inline_asset_content }}
                    {%- when 'heart' -%}
                      {{ 'icon-heart.svg' | inline_asset_content }}
                    {%- when 'star' -%}
                      {{ 'icon-star.svg' | inline_asset_content }}
                    {%- when 'phone' -%}
                      {{ 'icon-phone.svg' | inline_asset_content }}
                    {%- when 'email' -%}
                      {{ 'icon-email.svg' | inline_asset_content }}
                    {%- else -%}
                      {{ 'icon-checkmark.svg' | inline_asset_content }}
                  {%- endcase -%}
                </div>
              </div>
            {%- endif -%}
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  class AnnouncementBarMiniTrust {
    constructor(element) {
      this.element = element;
      this.content = element.querySelector('[data-announcement-content]');
      this.icons = element.querySelectorAll('[data-icon]');
      this.isScrolled = false;
      this.animationDelay = parseInt(element.style.getPropertyValue('--animation-delay')) || 50;
      
      this.init();
    }
    
    init() {
      this.setupScrollListener();
      this.animateIconsOnLoad();
      this.setupMobileSwipe();
    }
    
    setupScrollListener() {
      let ticking = false;
      
      window.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            this.handleScroll();
            ticking = false;
          });
          ticking = true;
        }
      });
    }
    
    handleScroll() {
      const scrollY = window.scrollY;
      const shouldCompress = scrollY > 50;
      
      if (shouldCompress !== this.isScrolled) {
        this.isScrolled = shouldCompress;
        this.element.classList.toggle('announcement-bar-mini-trust--compressed', shouldCompress);
      }
    }
    
    animateIconsOnLoad() {
      this.icons.forEach((icon, index) => {
        setTimeout(() => {
          icon.style.opacity = '1';
          icon.style.transform = 'scale(1)';
        }, index * this.animationDelay);
      });
    }
    
    setupMobileSwipe() {
      const pillsContainer = this.element.querySelector('[data-pills-container]');
      if (!pillsContainer) return;
      
      let startX = 0;
      let currentX = 0;
      let isDragging = false;
      
      pillsContainer.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        isDragging = true;
      });
      
      pillsContainer.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        currentX = e.touches[0].clientX;
        const diff = currentX - startX;
        pillsContainer.style.transform = `translateX(${diff}px)`;
      });
      
      pillsContainer.addEventListener('touchend', () => {
        isDragging = false;
        pillsContainer.style.transform = '';
      });
    }
  }
  
  // Initialize on DOM load
  document.addEventListener('DOMContentLoaded', () => {
    const announcementBars = document.querySelectorAll('[data-announcement-bar]');
    announcementBars.forEach(bar => new AnnouncementBarMiniTrust(bar));
  });
</script>

{% schema %}
{
  "name": "Announcement + Trust",
  "class": "announcement-bar-mini-trust-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "animation_delay",
      "min": 25,
      "max": 100,
      "step": 25,
      "unit": "ms",
      "label": "Animation delay between icons",
      "default": 50
    },
    {
      "type": "header",
      "content": "Trust Indicators"
    },
    {
      "type": "paragraph",
      "content": "Add trust indicators with bilingual support. Use blocks below to customize each item."
    }
  ],
  "blocks": [
    {
      "type": "trust_item",
      "name": "Trust Item",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_item",
          "label": "Show this item",
          "default": true
        },
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "options": [
            {
              "value": "truck",
              "label": "Truck (Shipping)"
            },
            {
              "value": "checkmark",
              "label": "Checkmark (Quality)"
            },
            {
              "value": "chat",
              "label": "Chat (Support)"
            },
            {
              "value": "shield",
              "label": "Shield (Security)"
            },
            {
              "value": "heart",
              "label": "Heart (Care)"
            },
            {
              "value": "star",
              "label": "Star (Rating)"
            },
            {
              "value": "phone",
              "label": "Phone (Contact)"
            },
            {
              "value": "email",
              "label": "Email (Contact)"
            }
          ],
          "default": "checkmark"
        },
        {
          "type": "text",
          "id": "text_en",
          "label": "Text (English)",
          "default": "Trust indicator text"
        },
        {
          "type": "text",
          "id": "text_ar",
          "label": "Text (Arabic)",
          "default": "نص مؤشر الثقة"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement + Trust",
      "blocks": [
        {
          "type": "trust_item",
          "settings": {
            "show_item": true,
            "icon": "truck",
            "text_en": "Free shipping over 20 KWD",
            "text_ar": "شحن مجاني للطلبات فوق 20 د.ك"
          }
        },
        {
          "type": "trust_item",
          "settings": {
            "show_item": true,
            "icon": "checkmark",
            "text_en": "100% genuine",
            "text_ar": "منتجات أصلية 100%"
          }
        },
        {
          "type": "trust_item",
          "settings": {
            "show_item": true,
            "icon": "chat",
            "text_en": "WhatsApp support",
            "text_ar": "دعم واتساب"
          }
        }
      ]
    }
  ]
}
{% endschema %}